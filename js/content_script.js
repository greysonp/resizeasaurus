// Generated by IcedCoffeeScript 1.6.3-f
(function() {
  var Jaws, Main, main,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };



  Jaws = (function() {
    Jaws.prototype.STATES = {
      HIDDEN: 1,
      PEEKING: 2,
      CHOMPING: 3
    };

    Jaws.prototype.HEIGHT = 100;

    Jaws.prototype.PEEK_TIME = 1000;

    Jaws.prototype.TRANSITION_TIME = 500;

    function Jaws() {
      this.state = this.STATES.HIDDEN;
      $('body').prepend("<div id=\"monster-t\">\n    <div class=\"monster-l\"></div>\n    <div class=\"monster-m\"></div>\n    <div class=\"monster-r\"></div>\n</div>\n<div id=\"monster-b\">\n    <div class=\"monster-l\"></div>\n    <div class=\"monster-m\"></div>\n    <div class=\"monster-r\"></div>\n</div>");
    }

    Jaws.prototype.peek = function(percentClosed) {
      var pixelOffset;
      pixelOffset = percentClosed * this.HEIGHT - this.HEIGHT;
      this.state = this.STATES.PEEKING;
      $('#monster-t').css('top', pixelOffset);
      $('#monster-b').css('bottom', pixelOffset);
    };

    Jaws.prototype.hide = function() {
      this.hideHalf('#monster-t', 'top');
      this.hideHalf('#monster-b', 'bottom');
    };

    Jaws.prototype.hideHalf = function(selector, property) {
      var props,
        _this = this;
      props = {};
      props[property] = -this.HEIGHT;
      $(selector).animate(props, this.TRANSITION_TIME, function() {
        _this.state = _this.STATES.HIDDEN;
      });
    };

    Jaws.prototype.reset = function() {
      if (this.state !== this.STATES.CHOMPING) {
        this.state = this.STATES.HIDDEN;
        $('#monster-t').css('top', -this.HEIGHT);
        $('#monster-b').css('bottom', -this.HEIGHT);
      }
    };

    return Jaws;

  })();

  Main = (function() {
    Main.MIN_WIDTH = 400;

    Main.MIN_HEIGHT = 200;

    Main.PEEK_THRESHOLD = 300;

    function Main() {
      this.onResize = __bind(this.onResize, this);
      this.jaws = new Jaws;
      $(window).resize(this.onResize);
    }

    Main.prototype.onResize = function() {
      this.resizeHeight($(window).height());
      this.resizeWidth($(window).width());
    };

    Main.prototype.resizeHeight = function(height) {
      var percentClosed, pixelsToClose;
      if (height < Main.PEEK_THRESHOLD) {
        pixelsToClose = height - Main.MIN_HEIGHT;
        percentClosed = 1 - (pixelsToClose / (Main.PEEK_THRESHOLD - Main.MIN_HEIGHT));
        this.jaws.peek(percentClosed);
      } else {
        this.jaws.reset();
      }
    };

    Main.prototype.resizeWidth = function(width) {};

    return Main;

  })();

  main = new Main;

}).call(this);
